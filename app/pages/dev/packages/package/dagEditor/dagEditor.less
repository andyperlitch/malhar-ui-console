@dag-editor-default-canvas-height: 650px;
@dag-editor-operator-side-length: 130px;

// datatorrent colors
@dt-yellow: rgb(221,229,65);
@dt-lightblue: rgb(41,164,220);
@dt-green: rgb(147,198,73);
@dt-pink: rgb(215,54,150);

@dag-editor-selected-operator-highlight: lighten(@brand-primary, 50%);
@dag-editor-selected-operator-color: lighten(@dt-green, 15%);

@dag-editor-selected-stream-color: lighten(@dt-green, 15%);

@dag-editor-inputEndpoint-fill: @dt-lightblue;
@dag-editor-inputEndpoint-stroke: #FFF;
@dag-editor-outputEndpoint-fill: @dt-pink;
@dag-editor-outputEndpoint-stroke: #FFF;

@dag-editor-selected-endpoint-fill: @dag-editor-selected-stream-color;
@dag-editor-selected-endpoint-stroke: #FFF;

@dag-editor-active-endpoint-stroke: @dt-lightblue;
@dag-editor-active-endpoint-fill: @dt-lightblue;
@dag-editor-active-hover-endpoint-stroke: #FFF;
@dag-editor-active-hover-endpoint-fill: #FFF;

@dag-editor-selected-endpoint-highlight: @dt-yellow;

// Set these elements to cursor:grab/grabbing
.operator-class, .dag-operator, .dag-operator .operator-class-name, .control-canvas.pan-control {
  cursor: grab;
  cursor: -webkit-grab;
  cursor: -moz-grab;

  &.ui-draggable-dragging {
    cursor: grabbing;
    cursor: -webkit-grabbing;
    cursor: -moz-grabbing;    
  }
}

#dag-canvas-container {
  #save-launch-status {
    position: absolute;
    right: 0;
    top: 10px;
    span.saving {
      font-size: 12px;
      color: #888;
    }
  }
}
// The canvas where operators get placed
// and arranged into the DAG.
.dag-canvas {
  border: 1px solid #DEDEDE;
  height: @dag-editor-default-canvas-height;
  position: relative;
  background: #FFF;
  overflow: hidden;
  margin: 0 -15px;

  svg {
    width: auto;
    height: auto;
  } 

  .ui-resizable-s {
    bottom: 0;
  }

  .fitToContent {
    position: absolute;
    top: 10px;
    left: 10px;
  }
}

// Element used for capturing panning
// and zooming events.
.control-canvas {
  z-index: 100;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  font-size: 300%;
  color: rgba(0,0,0,0.3);
  text-align: center;
     -moz-user-select: none;
  -webkit-user-select: none;
      -ms-user-select: none;
          user-select: none;

  &.zoom-control {
    cursor: zoom-in;
    &.invert {
      cursor: zoom-out;
    }
  }

  &.pan-control {
  }
}

.real-canvas {
  position: relative;
  width: 100%;
  height: 100%;
}

// Operators that have been placed on the
// dag-canvas
.dag-operator {
  position: relative;
  width: @dag-editor-operator-side-length;
  height: @dag-editor-operator-side-length;
  padding:5px;
  border: none;
  background-color: #EEE;
  border-radius: 50%;
  position: absolute;
  text-align: center;
  h1, h2, h3, h4, h5 {
    cursor: text;
  }
  &.selected {
    background-color: @dag-editor-selected-stream-color;
    border: none;
  }
  // center text vertically in operator container
  .dag-operator-content {
    position: relative;
    top: 50%;
    transform: translateY(-60%);
  }
  .close {
    visibility: hidden;
    position: absolute;
    top: 7px;
    left: 45%;
    line-height: 0.6;
    &:hover {
      background:transparent;
      color:#600;
    }
  }
  &:hover .close {
    visibility: visible;
  }
}

// Streams on the dag-canvas
.dag-canvas .dag-stream._jsPlumb_connector{
  cursor: pointer;

  path:nth-child(2) {
    stroke-dasharray:none;
    stroke: #AAA;
  }

  &.selected {
    path:nth-child(2) {
      stroke: @dag-editor-selected-stream-color !important;
    }
  }
  &.THREAD_LOCAL {
    path:nth-child(2) {
      stroke-dasharray: 20,1,2,1,2,1,2,1,2,1;
    }
  }
  &.CONTAINER_LOCAL {
    path:nth-child(2) {
      stroke-dasharray:5,2;
    } 
  }
  &.NODE_LOCAL {
    path:nth-child(2) {
      stroke-dasharray:10,5;
    }
  }
  &.RACK_LOCAL {
    path:nth-child(2) {
      stroke-dasharray:30,10;
    } 
  }
}

// The actual label on a given stream in the
// dag canvas
.stream-label {
  cursor: pointer;
  background: rgba(255, 255, 255, 0.75);
  padding: 3px 8px;
  border-radius: 10px;
  &.selected {
    background: @dag-editor-selected-stream-color;
    z-index: 3;
  }
}

// Port label styles
._jsPlumb_overlay.endpointTargetLabel,
._jsPlumb_overlay.endpointSourceLabel {
  padding: 0 5px;
  background-color:rgba(255, 255, 255, 0.75);
  border-radius:5px;
  font-size: 11px;
  cursor: pointer;
  &:hover, &.hover {
    z-index: 3;
  }
  &.selected {
    background: @dag-editor-selected-stream-color;
    z-index: 3;
  }
}

// The class name that shows up on
// dag-operators placed on the dag canvas
.dag-operator .operator-class-name {
  padding: 0 1em;
  font-size: 11px;
  word-break: break-word;
}

// Form that contains the in-place
// editable name field on a dag-operator
.edit-name-form {
  input {
    padding: 0.1em;
    font: inherit;
    text-align: center;
    background-color: rgba(255,255,255,0.4);
  }
}

// The panel/form whose content changes based on 
// what is currently selected on the dag-canvas.
// If nothing is selected, this is the app inspector.
.dag-inspector {
  label {
    font-size: 11px;
  }

  // the div that holds information about a 
  // stream's source or sinks
  .stream-inspector-source-sink {
    margin-bottom: 5px;
    border-bottom: 1px solid #CCC;
    p {
      margin-bottom: 5px;
    }
  }

  .form-group .help-icon {
    font-size: 13px;
    margin-top: 3px;
    color:#CCC;
    :hover {
      color: @dt-yellow;
    }
  }
}

.operator-class-grid {
  width: 100%;
  height: @dag-editor-default-canvas-height;
}

// jsPlumb elements inside of dag-canvas
.dag-canvas {

  // ---------------
  // PORTS/ENDPOINTS
  // ---------------
  
  // inputEndpoint
  ._jsPlumb_endpoint.inputEndpoint {
    svg circle {
      fill: @dag-editor-inputEndpoint-fill;
      stroke: @dag-editor-inputEndpoint-stroke;
    }
    &.selected {
      svg circle {
        stroke-width: 3px;
        fill: @dag-editor-selected-stream-color;
      }
    }
  }

  // outputEndpoint
  ._jsPlumb_endpoint.outputEndpoint {
    svg circle {
      fill: @dag-editor-outputEndpoint-fill;
      stroke: @dag-editor-outputEndpoint-stroke;
    }
    &.selected {
      svg circle {
        stroke-width: 3px;
        fill: @dag-editor-selected-stream-color;
      }
    }
  }

  ._jsPlumb_endpoint.active._jsPlumb_endpoint_drop_allowed svg circle {
    fill: @dag-editor-active-endpoint-fill;
  }

  // Selected styles
  ._jsPlumb_endpoint {
    border-radius: 50%;
    &:hover svg circle {
      fill: @dag-editor-selected-endpoint-highlight;
    }

    &.active {
      &._jsPlumb_endpoint_drop_allowed {
        svg circle {
          stroke-width: 3px;
          stroke: @dag-editor-inputEndpoint-fill;
          fill:white;
        }
      }

      svg circle {
        stroke-width: 3px;
        stroke: @dag-editor-active-endpoint-stroke;
        fill: @dag-editor-active-endpoint-fill;
      }
    }
  }

  // ----------
  // CONNECTORS
  // ----------

  // Default connector outline
  ._jsPlumb_connector path:nth-child(1){
    stroke: none;
  }

  // Default inner connector line
  ._jsPlumb_connector path:nth-child(2){
    stroke: @dt-lightblue;
  }
}
